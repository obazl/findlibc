load("@rules_cc//cc:defs.bzl", "cc_library")

load("@bazel_skylib//rules:common_settings.bzl",
     "bool_flag", "string_flag")

load("@makeheaders//rules:makeheaders.bzl", "makeheaders")

load("//config/cc:CONFIG.bzl", "BASE_COPTS", "PROFILE")

COPTS = BASE_COPTS

exports_files(glob(["meta_lexis.c"]))

######################################################
## dev flag tells Bazel to regenerate the lexer
bool_flag(name = "dev", build_setting_default = False)
config_setting(name = "dev?", flag_values = {":dev": "True"})

## enable debug logging
bool_flag(name = "debug-lexer", build_setting_default = False)
config_setting(name = "debug-lexer?",
               flag_values = {":debug-lexer": "True"})

################################################################
cc_library(
    name = "meta_lexer",
    linkstatic = True,
    srcs = [":mkhdrs"] + select({
        "//lib/lexer:dev?": ["//lib/lexer/lexis:meta_lexis.c"],
        "//conditions:default": ["meta_lexis.c"],
    }),
    includes = ["."],
    implementation_deps = [ # BASE_DEPS + [
        "@liblogc//lib:logc",
        "@uthash//lib:uthash",
    ],
    copts = COPTS + [
        # "-I$(GENDIR)/$(@)/lib/lexer",
    ],
    defines = PROFILE + select({
        ## for strdup, strndup:
        "@platforms//os:linux": ["_POSIX_C_SOURCE=200809L"],
        "//conditions:default": []
    }),
    # toolchains = TOOLCHAINS,
    visibility = [
        "//lib:__subpackages__",
        "//test:__pkg__"
    ]
)

########
makeheaders(
    name = "mkhdrs",
    hdrs_srcs = select({
        "//lib/lexer:dev?": ["//lib/lexer/lexis:meta_lexis.c"],
        "//conditions:default": ["meta_lexis.c"],
    }),
    additional_srcs = select({
        "//lib/parser:dev?": [
            "//lib/parser/syntaxis:meta_syntaxis.c"
        ],
        "//conditions:default": [
            "//lib/parser:meta_syntaxis.c"
        ],
    }) + select({
        "@obazl_tools_cc//profile:dev?": [
            "@liblogc//macros:ansi_colors.h",
            "@liblogc//macros:logging_debug.h"
        ],
        "//conditions:default": [
            "@liblogc//macros:logging_ndebug.h"
        ]
    }),
    visibility = ["//visibility:public"]
)

################################################################
## enable lexer debugging: --//src/lexer:debug
bool_flag(name = "debug", build_setting_default = 0)
config_setting(name = "lexdebug-enabled", flag_values = {":debug": "True"})
config_setting(name = "lexdebug-disabled", flag_values = {":debug": "False"})

string_flag(name = "lexdebug-rules", build_setting_default = "")
config_setting(name = "lexdebug-version",
               flag_values = {":lexdebug-rules": "version"})
config_setting(name = "lexdebug-fpf",
               flag_values = {":lexdebug-rules": "fpf"})
config_setting(name = "lexdebug-fvf",
               flag_values = {":lexdebug-rules": "fvf"})
config_setting(name = "lexdebug-filter",
               flag_values = {":lexdebug-rules": "filter"})
config_setting(name = "lexdebug-build-filter",
               flag_values = {":lexdebug-rules": "build-filter"})

