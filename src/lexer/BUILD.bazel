load("@bazel_skylib//rules:common_settings.bzl",
     "bool_flag", "string_flag")

load("@makeheaders//src:RULES.bzl", "makeheaders")
load("@lemon//src:BUILD.bzl", "lemon")

load("//config/cc:CONFIG.bzl",
     "BASE_COPTS",
     "BASE_DEFINES",
     "BASE_DEPS")

COPTS = BASE_COPTS
DEFINES = BASE_DEFINES

TOOLCHAINS = ["//:repo_paths"]

exports_files(glob(["meta_lexis.c"]))

################################################################
cc_library(
    name = "meta_lexer",
    linkstatic = True,
    srcs = [
        "meta_lexis.c",
        ":mkhdrs"
    ] + select({
        "@platforms//os:linux": [
            # "//src/linux:strlcat.c",
            # "//src/linux:strlcpy.c",
            # "//src/linux:strnstr.c"
        ],
        "//conditions:default":   []
    }),
    deps = BASE_DEPS + [
        "@liblogc//src:logc",
        "@uthash//src:uthash",
    ],
    copts = COPTS + [
        "-I$(GENDIR)/$(@)/src/lexer",
    ],
    local_defines = DEFINES,
    toolchains = TOOLCHAINS,
    visibility = [
        "//src:__subpackages__",
        "//test:__pkg__"
    ]
)

########
makeheaders(
    name = "mkhdrs",
    hdrs_srcs = ["meta_lexis.c"],
    additional_srcs = [
        "//src/parser:meta_syntaxis.c"
    ] + select({
        "//config/debug:debug?": [
        # "//config/profile:dev?": [
        # "@cc_config//profile:dev?": [
            "//src:ansi_colors.h", "//src:macros_debug.h"
        ],
        "//conditions:default": ["//src:macros_ndebug.h"]
    }),
    visibility = ["//visibility:public"]
)

################################################################
## enable lexer debugging: --//src/lexer:debug
bool_flag(name = "debug", build_setting_default = 0)
config_setting(name = "lexdebug-enabled", flag_values = {":debug": "True"})
config_setting(name = "lexdebug-disabled", flag_values = {":debug": "False"})

string_flag(name = "lexdebug-rules", build_setting_default = "")
config_setting(name = "lexdebug-version",
               flag_values = {":lexdebug-rules": "version"})
config_setting(name = "lexdebug-fpf",
               flag_values = {":lexdebug-rules": "fpf"})
config_setting(name = "lexdebug-fvf",
               flag_values = {":lexdebug-rules": "fvf"})
config_setting(name = "lexdebug-filter",
               flag_values = {":lexdebug-rules": "filter"})
config_setting(name = "lexdebug-build-filter",
               flag_values = {":lexdebug-rules": "build-filter"})

