load("@bazel_skylib//rules:common_settings.bzl",
     "bool_flag", "string_flag")
# load("@bazel_skylib//rules:copy_file.bzl", "copy_file")

load("@makeheaders//src:RULES.bzl", "makeheaders")

load("//config/cc:CONFIG.bzl",
     COPTS = "BASE_COPTS",
     DEFINES = "BASE_DEFINES",
     "BASE_DEPS")

TOOLCHAINS = ["//:repo_paths"]

# for mkhdr findlib.h
exports_files(["findlib_map_reduce.c"])

cc_library(
    name = "findlib_map_reduce",
    srcs = [
        "findlib_map_reduce.c",
        ":mkhdrs"
    ],
    deps = BASE_DEPS + [
        "@liblogc//src:logc",
        "@uthash//src:uthash",
    ],
    copts = COPTS + [
        "-I$(GENDIR)/$(@)/src/map_reduce",
        "-I$(@liblogc)/src",
        "-I$(@uthash)/src"
    ],
    local_defines = DEFINES,
    toolchains = TOOLCHAINS,
    visibility = ["//visibility:public"]
)

makeheaders(
    name = "mkhdrs",
    hdrs_srcs = [
        "findlib_map_reduce.c",
        # "//src:utils.c"
    ],
    additional_srcs = [
        "//src:ansi_colors.h",
        "//src:findlibc_debug.c"
    ] + select({
        "//config/compilation_mode:fastbuild?": [
            "//src:macros_debug.h"
        ],
        "//conditions:default": ["//src:macros_ndebug.h"]
    }),

)
