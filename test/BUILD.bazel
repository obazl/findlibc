load("@rules_cc//cc:defs.bzl", "cc_library")

load("@makeheaders//src:BUILD.bzl", "makeheaders")

load("//:BUILD.bzl",
     "LIBFINDLIB_VERSION",
     "LIBLOG_CC_VERSION",
     "UTHASH_VERSION")
load("//config/cc:BUILD.bzl",
     COPTS = "BASE_COPTS",
     DEFINES = "BASE_DEFINES")

################################################################
cc_binary(
    name  = "parse_test",
    linkstatic = 1,
    srcs  = [
        "parse_test.c",
        ":mkhdrs"
    ],
    deps = [
        "@liblog_cc//src:logc",
        "@uthash//src:uthash",
        "//src:findlib",
    ],
    copts = COPTS + [
        "-Iexternal/liblog_cc~{}/src".format(LIBLOG_CC_VERSION),
        "-Iexternal/uthash~{}/src".format(UTHASH_VERSION),
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        # these allow this test target to be built as
        # an external resource (which we do not support):
        # "-I$(GENDIR)/external/libfindlib~{}/src".format(
        #     LIBFINDLIB_VERSION),
        # "-I$(GENDIR)/external/libfindlib~{}/test".format(
        #     LIBFINDLIB_VERSION),
    ],
    local_defines = DEFINES
)

##########
# WARNING: lexer's API not exposed in findlib.h
# so we depend on lexer directly, not libfindlib,
# which means too that mkhdrs does same
cc_binary(
    name  = "lex_test",
    linkstatic = 1,
    srcs  = [
        "lex_test.c",
        ":mkhdrs",
    ],
    deps = [
        "@liblog_cc//src:logc",
        "@uthash//src:uthash",
        "//src/lexer:meta_lexer",
        # "//src:findlib",
    ],
    copts = COPTS + [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Iexternal/liblog_cc~{}/src".format(LIBLOG_CC_VERSION),
        "-Iexternal/uthash~{}/src".format(UTHASH_VERSION)
    ],
    local_defines = DEFINES,
)

##########
cc_binary(
    name  = "crawler_test",
    linkstatic = 1,
    srcs  = [
        "crawler_test.c",
        ":mkhdrs"
    ],
    deps = [
        "@liblog_cc//src:logc",
        "@uthash//src:uthash",
        "//src:findlib"
    ],
    copts = COPTS + [
        "-I$(GENDIR)/src",
        "-I$(GENDIR)/test",
        "-Iexternal/liblog_cc~{}/src".format(LIBLOG_CC_VERSION),
        "-Iexternal/uthash~{}/src".format(UTHASH_VERSION)
    ],
    local_defines = DEFINES,
)

################################################################
# cc_binary(
#     name  = "walk_test",
#     linkstatic = 1,
#     srcs  = [
#         "walk_test.c",
#         "walk_test.h",
#         # "//src:log.h"
#     ],
#     copts = COPTS + [

#         "-Isrc",
#         "-Itest",

#         "-I$(GENDIR)/src",
#         "-I$(GENDIR)/src/opam",
#         "-I$(GENDIR)/test/opam",

#         "-Ivendored/uthash",

#         "-Iexternal/mibl/src",
#         "-I$(GENDIR)/external/mibl/src",

#         "-Iexternal/mibl/opam/test",
#         "-I$(GENDIR)/external/mibl/test/opam",

#         "-Iexternal/libs7/src",
#     ],
#     defines = ["DEBUG", "TRACING"],
#     deps = [
#         "//src:treewalker",
#         # "//src:opam_lexer"
#     ],
# )

################################################################
makeheaders(
    name = "mkhdrs",
    srcs = [
        "crawler_test.c",
        "lex_test.c",
        "parse_test.c",
    ],
    additional_srcs = [
        "//src/lexer:meta_lexis.c",
        "//src/parser:meta_syntaxis.c",
    ],
)
